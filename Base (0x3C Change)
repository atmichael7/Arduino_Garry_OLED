// michael barrett

// for this board in particular (Nano), use ATmega328P
// for this oled in particular (128x64 I2C), use 0x3C

// Oled -> Nano - Wire [screen testing]
// 5v   -> vcc  - (Green)
// gnd  -> gnd  - (Blue)
// SCL  -> a5   - (Yellow)
// SDA  -> a4   - (Orange)

#include <DHT.h> // library changed since last used, update knowledge 

#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels
#define DHT11_PIN 2

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
// The pins for I2C are defined by the Wire-library. 
// On an arduino UNO:       A4(SDA), A5(SCL)
// On an arduino MEGA 2560: 20(SDA), 21(SCL)
// On an arduino LEONARDO:   2(SDA),  3(SCL), ...
//#define OLED_RESET     4 // Reset pin # (or -1 if sharing Arduino reset pin)
#define SCREEN_ADDRESS 0x3C ///< See datasheet for Address; 0x3D for 128x64, 0x3C for 128x32
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

#define NUMFLAKES     10 // Number of snowflakes in the animation example

#define LOGO_HEIGHT   16
#define LOGO_WIDTH    16
static const unsigned char PROGMEM logo_bmp[] =
{ B00000000, B11000000,
  B00000001, B11000000,
  B00000001, B11000000,
  B00000011, B11100000,
  B11110011, B11100000,
  B11111110, B11111000,
  B01111110, B11111111,
  B00110011, B10011111,
  B00011111, B11111100,
  B00001101, B01110000,
  B00011011, B10100000,
  B00111111, B11100000,
  B00111111, B11110000,
  B01111100, B11110000,
  B01110000, B01110000,
  B00000000, B00110000 };

DHT dht(DHT11_PIN, DHT11);
int tempInF;

void setup() 
{
  Serial.begin(9600);
  dht.begin();

  // SSD1306_SWITCHCAPVCC = generate display voltage from 3.3V internally
  if(!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) 
  {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;); // Don't proceed, loop forever
    display.clearDisplay();
  }
  //display.clearDisplay();
}


char arr [13] = {'F','r','o','m',':',' ','M','i','c','h','a','e','l'};

void startSeq()
{
  display.clearDisplay();
  display.setTextSize(2);              
  display.setTextColor(WHITE); 
  display.setCursor(0,0);                   
  display.println(F("To my good  friend,   Garrett"));

  display.setTextSize(1); 
  display.print("    ");


  display.setTextColor(BLACK, WHITE);        
  display.display();
  delay(2000);

  for (int i = 0; i <= 12; i++)
  {
    display.print(arr[i]);
    display.display();
    delay(50);
  }
  delay(2000);
}



void displayTemp()
{
  tempInF = dht.readTemperature(true);
  
  display.clearDisplay();
  display.setTextSize(2);             // Normal 1:1 pixel scale
  display.setTextColor(WHITE);        // Draw white text
  display.setCursor(0,0);             // Start at top-left corner
  display.print("Temp:\n");
  
  display.setTextSize(5);
  display.print(tempInF);
  display.setTextSize(2);
  display.print(" ");
  display.write(167);
  display.setTextSize(4);
  display.print("F");
  display.display();
  delay(10000);
}

void displayHumid()
{
  //int chk = DHT.read11(DHT11_PIN);
  int hum = dht.readHumidity();
    
  display.clearDisplay();
  display.setTextSize(2);             // Normal 1:1 pixel scale
  display.setTextColor(WHITE);        // Draw white text
  display.setCursor(0,0);             // Start at top-left corner
  display.print("Humidity:\n");
  
  display.setTextSize(5);
  display.print(hum);
  display.setTextSize(2);
  display.print(" ");
  display.setTextSize(4);
  display.print("%");
  display.display();
  delay(10000);
}


void loop() 
{
  startSeq();
  while(1)
  {
    displayTemp();
    displayHumid();
  } 
}
